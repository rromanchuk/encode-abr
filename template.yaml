AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  encoder-abr

  Sample solution for replacing AWS MediaConvert workflow using ffmpeg

Parameters:
  Env:
    Type: String

  S3Bucket:
    Type: String

Globals:
  Function:
    Timeout: 400
    MemorySize: 8000
    Environment:
      Variables:
        DEST_BUCKET: !Sub "${S3Bucket}"

Resources:
  EncodeFIFOQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      VisibilityTimeout: 800
  EncodeARM64FIFOQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      VisibilityTimeout: 800
  EcodeAbrFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Policies:
        - Statement:
          - Sid: S3GetAll
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: '*'
          - Sid: S3PutVideos
            Effect: Allow
            Action:
              - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/vod/*"
          - Sid: SNSPublish
            Effect: Allow
            Action:
              - SNS:Publish
            Resource: '*'
      # VpcConfig:
      #   SecurityGroupIds:
      #     - sg-<your-sg>
      #   SubnetIds:
      #     - subnet-<your-subnet>
      #     - subnet-<your-subnet2>
      Events:
        EncodeJob:
          Type: SQS
          Properties:
            Queue: !GetAtt EncodeFIFOQueue.Arn
            BatchSize: 5
            FunctionResponseTypes:
              - ReportBatchItemFailures
    Metadata:
      DockerTag: ruby2.7-x86_64
      DockerContext: ./encode-abr
      Dockerfile: Dockerfile
  EcodeAbrARM64Function:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
        - arm64
    Policies:
        - Statement:
          - Sid: S3GetAll
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: '*'
          - Sid: S3PutVideos
            Effect: Allow
            Action:
              - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/vod/*"
          - Sid: SNSPublish
            Effect: Allow
            Action:
              - SNS:Publish
            Resource: '*'
    Events:
      EncodeJob:
        Type: SQS
        Properties:
          Queue: !GetAtt EncodeARM64FIFOQueue.Arn
          BatchSize: 5
          FunctionResponseTypes:
            - ReportBatchItemFailures
    Metadata:
      DockerTag: ruby2.7-arm64
      DockerContext: ./encode-abr
      Dockerfile: Dockerfile-arm64
Outputs:

  EcodeAbrFunctionFunction:
    Description: "EcodeAbrFunction ARN"
    Value: !GetAtt EcodeAbrFunction.Arn
  EcodeAbrARM64FunctionFunction:
    Description: "EcodeAbrARM64Function ARN"
    Value: !GetAtt EcodeAbrARM64Function.Arn
  EcodeAbrFunctionIamRole:
    Description: "Implicit IAM Role created for encoder function"
    Value: !GetAtt EcodeAbrFunction.Arn
